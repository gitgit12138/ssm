<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

    <!-- Shiro 的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />
        <!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
<!--
        路径有两种方式，第一种指向一个处理器，第二种指向表单页面.
        如果为表单页面，那么需要手动进行表单认证(利用subject.login())，不会经过formAuthenticationFilter进行表单认证
-->
        <property name="loginUrl" value="/user/login" />
        <!-- 通过unauthoeizedUrl 指定没有权限操作时跳转页面 -->
        <property name="unauthorizedUrl" value="/refuse.jsp" />
        <property name="filters">
            <map>
                <entry key="hasAnyRoles" value-ref="anyRolesAuthorizationFilter"></entry>
            </map>
        </property>
        <!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- 请求/logout会执行退出操作 -->
                /logout = logout
<!--                配置的角色和权限对于路径的访问-->
                <!-- roles[XX]表示有XX角色才可访问，[]中可以写多个角色，表示同时拥有才可以访问 -->
<!--                /user/uList = roles["实训部讲师","咨询师"],authc-->
                /user/uList = hasAnyRoles["实训部讲师","咨询师"],authc

                <!-- perms[XX]表示有XX权限才可访问 -->
                /user/uCreate = perms["user:create"],authc
                <!--对静态资源的匿名访问-->
                /html/** = anon
                /css/** = anon
                /js/** = anon
                /img/** = anon
                <!--authc是认证后能够访问，表示身份认证通过或通过记住我认证通过的可以访问 -->
                /** = authc
            </value>
        </property>
    </bean>

    <!-- 安全管理器
    由spring初始化securityManager
    由spring进行整合之后shiro就不再需要ini文件了
    -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
<!--        指定自定义域-->
        <property name="realm" ref="userRealm" />
    </bean>

    <!-- 自定义 realm -->
    <bean id="userRealm" class="com.qfedu.realm.UserRealm">
        <!-- 配置MD5加密，若不进行MD5加密，这段代码不用 -->
        <property name="credentialsMatcher" ref="credentialsMatcher" />
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher"
          class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5" />
        <property name="hashIterations" value="2" />
    </bean>
<!--    自定义角色权限过滤器-->
    <bean class="com.qfedu.filter.AnyRolesAuthorizationFilter" id="anyRolesAuthorizationFilter"></bean>
</beans>